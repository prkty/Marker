plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco' // JaCoCo 플러그인 추가
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Bookmark management API server'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-cache' // Spring Cache 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT 라이브러리 추가
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' // Swagger UI 의존성 추가
	//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:latest'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13' // Swagger UI 의존성 추가
	testImplementation 'org.springframework.security:spring-security-test' // Spring Security 테스트 의존성 추가
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty "file.encoding", "UTF-8"
    jvmArgs "-Dfile.encoding=UTF-8"
}

// JaCoCo 설정 추가
jacoco {
	toolVersion = "0.8.12" // JaCoCo 버전 명시
}

jacocoTestReport {
	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('reports/jacoco') // 리포트 생성 위치 지정
	}

	// jacocoTestReport 태스크가 test 태스크에 의존하도록 설정
	// (test가 실행된 후에 실행되어야 함)
	dependsOn(tasks.named('test'))
}

// check 태스크가 jacocoTestReport 태스크에 의존하도록 설정합니다.
// 이렇게 하면 'build' 또는 'check' 실행 시, 테스트와 커버리지 리포트 생성이 모두 수행됩니다.
tasks.named('check') {
	dependsOn(jacocoTestReport)
}
